Make sure the following dependencies are installed:
	- pyyaml
	- rospkg


install using apt install ...
	- ros-kinetic-full
	- ros-kinetic-moveit
	- ros-kinetic-ur-description
	- ros-kinetic-franka-description


clone the following packages in you're catkin_ws/src:
	- git clone -b kinetic-devel https://github.com/ros-planning/panda_moveit_config.git
	- git clone -b kinetic-devel https://github.com/ros-planning/moveit_tutorials.git
	- git clone https://github.com/UniversalRobots/Universal_Robots_ROS_Driver
Deze wss niet - later naar kijken
	- git clone -b kinetic-devel https://github.com/ros-industrial/ur_modern_driver


Pas ur5_moveit_config/config/controllers.yaml aan:
	action_ns: scaled_pos_traj_controller/follow_joint_trajectory


To start a simulation, use these following steps:
	- open a terminal and type the following commands:
		sudo ifconfig enp4s0f2 192.168.1.30 netmask 255.255.255.0
			# enx00e04c680f64 is the name of the ethernet cable ur5
	- execute in the same ternimal:
		roslaunch ur_robot_driver ur5_bringup.launch robot_ip:=192.168.1.102 \
            kinematics_config:=$HOME/my_robot_calibration.yaml
    - now start "urcapexternalcontrol.urp" on the ur5
	- execute in a second terminal:
		roslaunch ur5_moveit_config ur5_moveit_planning_execution.launch limited:=true
			# opens a moveit screen of the ur5.
	- OPTIONAL to open rviz with the real hardware:
		roslaunch ur5_moveit_config moveit_rviz.launch config:=true


# Use this command if an error occours while importing pyassimp
	try 1)
		pip install -U pyassimp
	try 2)
		sudo dpkg --remove --force-depends python-pyassimp
		sudo -H pip install pyassimp


# Use this command for the following error
   - "Could not find a package configuration file provided by "industrial_msgs""
		sudo apt install --reinstall ros-kinetic-industrial-msgs


# Use this command with the error
	- "The following packages have unmet dependencies:
	 libaria-dev : Depends: libaria2v5 (= 2.8.0+repack-1ubuntu2) but it is not going to be installed
	E: Unmet dependencies. Try 'apt-get -f install' with no packages (or specify a solution)."
		sudo apt purge libaria-dev


# How To Fix System Program Problem Detected In Ubuntu
	sudo rm /var/crash/*


# To get the necessary dependencies of all current ros packages
	rosdep install --from-paths . --ignore-src --rosdistro kinetic


# How to get the real Robotiq gripper to move:
#To control the gripper over a serial port, you may need to give proper privileges to the user:
	"sudo usermod -a -G dialout YOURUSERNAME"
#YOURUSERNAME is for exampel dca or gerard.
#To find out the port on which the gripper is connected, use:
	"dmesg | grep tty"
#It's probably something like ttyUSB0.

#Now make sure a roscore is started!

#Get in the robotiq folder: "TNO_Project2_PCB/robotiq/robotiq_2f_gripper_control/nodes"
#In this folder there is a python script, which will probably connect the robotiq gripper to the usbtty0 in your /dev/

#This file is called: 'Robotiq2FGripperRtuNode.py'

#Run:
	"python Robotiq2FGripperRtuNode.py /dev/ttyUSB0"
#The driver listens for messages on "Robotiq2FGripperRobotOutput" using the "Robotiq2FGripper_robot_output" msg type. 
#The messages are interpreted and commands are sent to the gripper accordingly. 
#A simple controller node is provided which can be run (in another terminal) using "rosrun robotiq_2f_gripper_control Robotiq2FGripperSimpleController.py"

#Now open a new Terminal!

#The driver listens for messages on "Robotiq2FGripperRobotOutput" using the "Robotiq2FGripper_robot_output" msg type. The messages are interpreted and commands are sent to the gripper accordingly. A simple controller node is provided which can be run (in another terminal) using 
	"rosrun robotiq_2f_gripper_control Robotiq2FGripperSimpleController.py"

Press 'a' to activate the gripper.

#Using the Panda Gripper in RVIZ and Gazebo
The packages that you need to use, are the following:
 - Libfranka
 - Franka_ros
 - panda_moveit_config

 Matj' Erdal has a custom package that you also can use. 

====
#To use rviz with ur5 or gripper
	- roslaunch ur5_gripper_moveit_config demo.launch rviz_tutorial:=true

#Make sure the Robot Description field is set to 'robot_description'.
#Make sure the Planning Scene Topic field is set to '/planning_scene'. Click on topic name to expose topic-name drop-down.
#In Planning Request, change the Planning Group to 'ur5_arm'.
#In Planned Path, change the Trajectory Topic to '/move_group/display_planned_path'.
 
